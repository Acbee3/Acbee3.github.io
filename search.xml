<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>常用API</title>
      <link href="/2018/04/30/%E5%B8%B8%E7%94%A8API/"/>
      <url>/2018/04/30/%E5%B8%B8%E7%94%A8API/</url>
      <content type="html"><![CDATA[<h1 id="web-API"><a href="#web-API" class="headerlink" title="web API"></a>web API</h1><h2 id="常用语句"><a href="#常用语句" class="headerlink" title="常用语句"></a>常用语句</h2><h3 id="获取元素"><a href="#获取元素" class="headerlink" title="获取元素"></a>获取元素</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">document</span>.getElementById();  <span class="comment">// 单个元素</span></span><br><span class="line"><span class="built_in">document</span>.getElementsByTagName();</span><br><span class="line"><span class="built_in">document</span>.querySelector(); <span class="comment">// 单个元素</span></span><br><span class="line"><span class="built_in">document</span>.querySelectorAll();</span><br><span class="line"><span class="built_in">document</span>.getElementsByClassName();</span><br><span class="line"><span class="built_in">document</span>.getElementByName(<span class="string">'name'</span>); <span class="comment">// 有兼容问题 一般不用</span></span><br></pre></td></tr></table></figure><h3 id="样式操作-javascript只能改变行内样式"><a href="#样式操作-javascript只能改变行内样式" class="headerlink" title="样式操作(javascript只能改变行内样式)"></a>样式操作(javascript只能改变行内样式)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">元素.setAttribute(<span class="string">'class'</span>, <span class="string">'类名'</span>) <span class="comment">// 可用于自定义属性  DOM Core</span></span><br><span class="line">元素.getAttribue(<span class="string">'属性名'</span>)</span><br><span class="line">元素.className = <span class="string">''</span>; <span class="comment">// 由于 class 是关键字，不能直接用   HTML DOM</span></span><br><span class="line">元素.style.backgroundColor | width | height ... = <span class="string">''</span>;</span><br><span class="line">element.style.样式属性 <span class="comment">// 读取</span></span><br><span class="line"><span class="built_in">window</span>.getComputedStyle(<span class="string">'元素名'</span>); <span class="comment">// 只能读取 可以读取嵌入的样式</span></span><br></pre></td></tr></table></figure><h3 id="节点操作"><a href="#节点操作" class="headerlink" title="节点操作"></a>节点操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">元素.parentNode; <span class="comment">// 任何元素的父元素只有一个</span></span><br><span class="line">元素.childNodes;</span><br><span class="line">元素.firstChild;</span><br><span class="line">元素.lastChild;</span><br><span class="line">元素.nextSibling; <span class="comment">// 下一个兄弟节点；</span></span><br><span class="line">元素.previousSibling; <span class="comment">// 上一个兄弟节点；</span></span><br><span class="line">元素.nextElementSibling; <span class="comment">// 下一个DOM兄弟节点（不包括文本节点）；</span></span><br><span class="line">元素.previousElementSibling; <span class="comment">// 上一个DOM兄弟节点（不包括文本节点）；</span></span><br><span class="line"><span class="built_in">document</span>.createElement(<span class="string">'标签名'</span>); <span class="comment">// 创建标签节点；</span></span><br><span class="line">父节点.appendChild(子节点); <span class="comment">// 在父节点中追加子节点，按添加的顺序，默认直接加到已有的最后面；</span></span><br><span class="line">父节点.removeChild(子节点); <span class="comment">// 移除</span></span><br><span class="line">父节点.insertBefore(新节点, 原有节点);  <span class="comment">// 将新的节点插入到原有节点的前面</span></span><br><span class="line">element.innerHTML = <span class="string">''</span>; <span class="comment">// 可以识别dom 改变类样式 其取值也会识别dom 用&lt;&gt;时 要用 &amp;lt; 和 &amp;gt;</span></span><br><span class="line">element.innerText       <span class="comment">// 不识别dom 把一切都变为 字符串 取值 也是全部取下来 不改变内容</span></span><br></pre></td></tr></table></figure><h3 id="事件操作"><a href="#事件操作" class="headerlink" title="事件操作"></a>事件操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">dom对象.onclick() = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">dom对象.onmouseover() <span class="comment">// 会触发冒泡</span></span><br><span class="line">dom对象.onmouseout() <span class="comment">// 会触发冒泡</span></span><br><span class="line">dom对象.onmouseenter() <span class="comment">// 不产生冒泡</span></span><br><span class="line">dom对象.onmouselesve() <span class="comment">// 不产生冒泡</span></span><br><span class="line">dom对象.onmousemove()</span><br><span class="line">dom对象.ondblclick()</span><br><span class="line">dom对象.onkeydown()</span><br><span class="line">dom对象.onkeyup()</span><br><span class="line">dom对象.onkeypress()</span><br><span class="line">element.addEventListener(<span class="string">'事件名'</span>, 事件处理函数, [配置]) <span class="comment">// 可以追加多个事件 配置与取消冒泡有关</span></span><br><span class="line">element.removeEventListener(<span class="string">'事件名'</span>, 事件处理函数) <span class="comment">// 移除事件 以上两个均可以取消冒泡 是新方法</span></span><br><span class="line">element.attachEvent(<span class="string">'onclick'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;); <span class="comment">// IE8 中用于事件的追加</span></span><br><span class="line">element.detachEvent()</span><br></pre></td></tr></table></figure><h3 id="取消时间冒泡"><a href="#取消时间冒泡" class="headerlink" title="取消时间冒泡"></a>取消时间冒泡</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.event.cancelBubble = <span class="literal">true</span>; <span class="comment">// 默认是 false 不取消冒泡</span></span><br><span class="line">e.stopPropagation();</span><br></pre></td></tr></table></figure><h3 id="数组提供的遍历方法"><a href="#数组提供的遍历方法" class="headerlink" title="数组提供的遍历方法"></a>数组提供的遍历方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">arr.forEach(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;); <span class="comment">// 将每一个数组元素都取出来一个一个进行函数处理</span></span><br><span class="line">arr.map(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;); <span class="comment">// 对每一个元素在原有基础上进行“样式”上的操作</span></span><br><span class="line">arr.filter(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;); <span class="comment">// 对每一个元素进行筛选 返回符合条件的元素</span></span><br></pre></td></tr></table></figure><h3 id="事件对象"><a href="#事件对象" class="headerlink" title="事件对象"></a>事件对象</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">e.target  <span class="comment">// 事件源</span></span><br><span class="line">e.keyCode <span class="comment">// 键位码</span></span><br></pre></td></tr></table></figure><h3 id="计时器"><a href="#计时器" class="headerlink" title="计时器"></a>计时器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> timer = set.Isetnterval(函数, 时间间隔);</span><br></pre></td></tr></table></figure><h3 id="load事件"><a href="#load事件" class="headerlink" title="load事件"></a>load事件</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.load = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 将 js 代码放到 html 代码之前要加这段代码 表示要在页面加载完成后执行 js</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>jQuery</title>
      <link href="/2018/04/30/jQuery/"/>
      <url>/2018/04/30/jQuery/</url>
      <content type="html"><![CDATA[<h1 id="jQuery"><a href="#jQuery" class="headerlink" title="jQuery"></a>jQuery</h1><h2 id="常用语句（大多是方法，只有极少数的属性）"><a href="#常用语句（大多是方法，只有极少数的属性）" class="headerlink" title="常用语句（大多是方法，只有极少数的属性）"></a>常用语句（大多是方法，只有极少数的属性）</h2><h3 id="入口函数"><a href="#入口函数" class="headerlink" title="入口函数"></a>入口函数</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line">或</span><br><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// window.onload只能注册一次，jQuery入口函数可以注册多次</span></span><br></pre></td></tr></table></figure><h3 id="DOM-对象-与-jQuery-对象-的转化"><a href="#DOM-对象-与-jQuery-对象-的转化" class="headerlink" title="DOM 对象 与 jQuery 对象 的转化"></a>DOM 对象 与 jQuery 对象 的转化</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">DOM =&gt; jQuery</span><br><span class="line">$(dom对象)；</span><br><span class="line">jQuery =&gt; DOM</span><br><span class="line">jQuery对象[索引值];</span><br><span class="line">jQuery对象.get(索引值);</span><br></pre></td></tr></table></figure><h3 id="选择器"><a href="#选择器" class="headerlink" title="选择器"></a>选择器</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'#id'</span>);</span><br><span class="line">$(<span class="string">'.className'</span>);</span><br><span class="line">$(<span class="string">'div'</span>);</span><br><span class="line">$(<span class="string">'ul li'</span>);</span><br><span class="line">$(<span class="string">'ul &gt; li'</span>);</span><br><span class="line">$(<span class="string">'div, p, span'</span>);</span><br><span class="line">$(<span class="string">'div.class'</span>);</span><br><span class="line">$(<span class="string">'li:eq(2)'</span>).css(<span class="string">'color'</span>, <span class="string">'red'</span>); <span class="comment">// 从0开始</span></span><br><span class="line">$(<span class="string">'li:odd'</span>).css(<span class="string">'color'</span>, <span class="string">'red'</span>);  <span class="comment">// 索引 为 奇数</span></span><br><span class="line">$(<span class="string">'li:even'</span>).css(<span class="string">'color'</span>, <span class="string">'red'</span>); <span class="comment">// 索引 为 偶数</span></span><br><span class="line">$(<span class="string">'ul'</span>).children(<span class="string">'li'</span>); <span class="comment">// 相当于 $('ul &gt; li');</span></span><br><span class="line">$(<span class="string">'ul'</span>).find(<span class="string">'li'</span>); <span class="comment">// 相当于 $('ul li');</span></span><br><span class="line">$(<span class="string">'#first'</span>).siblings(); <span class="comment">// 查找其兄弟节点 不包括自身</span></span><br><span class="line">$(<span class="string">'#first'</span>).parent(); <span class="comment">// 父节点 （只有一个）</span></span><br><span class="line">$(<span class="string">'li'</span>).eq(<span class="number">2</span>); <span class="comment">// 相当于 $('li:eq(2)');</span></span><br><span class="line">$(<span class="string">'li'</span>).next(); <span class="comment">// 找下一个兄弟</span></span><br><span class="line">$(<span class="string">'li'</span>).prev(); <span class="comment">// 找上一个兄弟</span></span><br></pre></td></tr></table></figure><h3 id="样式操作"><a href="#样式操作" class="headerlink" title="样式操作"></a>样式操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$obj.css(<span class="string">'color'</span>, <span class="string">'red'</span>);</span><br><span class="line">$obj.css(&#123;</span><br><span class="line">    <span class="string">'color'</span>: <span class="string">'red'</span>,</span><br><span class="line">    <span class="string">'backgroundColor'</span>: <span class="string">'blue'</span></span><br><span class="line">&#125;)  <span class="comment">// 设置多个样式</span></span><br><span class="line">$obj.css(<span class="string">'backgroundColor'</span>); <span class="comment">// 获取样式</span></span><br></pre></td></tr></table></figure><h3 id="class操作"><a href="#class操作" class="headerlink" title="class操作"></a>class操作</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$obj.addClass();</span><br><span class="line">$obj.removeClass();</span><br><span class="line">$obj.hasClass();</span><br><span class="line">$obj.toggleClass();</span><br></pre></td></tr></table></figure><h3 id="attr操作-应用范围最广，类名，id名，style样式都可以操作"><a href="#attr操作-应用范围最广，类名，id名，style样式都可以操作" class="headerlink" title="attr操作(应用范围最广，类名，id名，style样式都可以操作)"></a>attr操作(应用范围最广，类名，id名，style样式都可以操作)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$obj.attr(<span class="string">'title'</span>, <span class="string">'点击图片'</span>);</span><br><span class="line">$obj.attr(&#123;</span><br><span class="line">    title:<span class="string">'哎哟，不错哦'</span>,</span><br><span class="line">    alt:<span class="string">'哎哟，不错哦'</span>,</span><br><span class="line">    style:<span class="string">'opacity:.5'</span></span><br><span class="line">&#125;)  </span><br><span class="line">$obj.attr(<span class="string">'title'</span>);</span><br><span class="line">$(<span class="string">'img'</span>).removeAttr(<span class="string">'title'</span>); <span class="comment">// 移除属性</span></span><br></pre></td></tr></table></figure><h3 id="prop操作-对于checked-selected-disabled-这类布尔类型的属性"><a href="#prop操作-对于checked-selected-disabled-这类布尔类型的属性" class="headerlink" title="prop操作(对于checked selected disabled 这类布尔类型的属性)"></a>prop操作(对于checked selected disabled 这类布尔类型的属性)</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">':checked'</span>).prop(<span class="string">'checked'</span>, <span class="literal">true</span>); <span class="comment">// 设置</span></span><br><span class="line">$obj.prop(<span class="string">'checked'</span>); <span class="comment">// 获取</span></span><br></pre></td></tr></table></figure><h3 id="val-text-html"><a href="#val-text-html" class="headerlink" title="val()/text/()html()"></a>val()/text/()html()</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$obj.val()<span class="comment">// 获取或者设置表单元素的value属性的值</span></span><br><span class="line">$obj.html() <span class="comment">// 对应innerHTML</span></span><br><span class="line">$obj.text()<span class="comment">// 对应innerText/textContent，处理了浏览器的兼容性</span></span><br></pre></td></tr></table></figure><h3 id="jQuery动画"><a href="#jQuery动画" class="headerlink" title="jQuery动画"></a>jQuery动画</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$obj.show([speed], [callback]);</span><br><span class="line"><span class="comment">// speed(可选)：动画的执行时间</span></span><br><span class="line"> <span class="comment">// 1.如果不传，就没有动画效果。如果是slide和fade系列，会默认为normal</span></span><br><span class="line"> <span class="comment">// 2.毫秒值(比如1000),动画在1000毫秒执行完成(推荐)</span></span><br><span class="line">     <span class="comment">// 3.固定字符串，slow(600)、normal(400)、fast(200)，如果传其他字符串，则默认为normal。</span></span><br><span class="line"><span class="comment">// callback(可选):执行完动画后执行的回调函数</span></span><br><span class="line">slideDown()/slideUp()/slideToggle();同理</span><br><span class="line">fadeIn()/fadeOut()/fadeToggle();同理</span><br><span class="line"></span><br><span class="line">$(selector).animate(&#123;params&#125;,[speed],[easing],[callback]);</span><br><span class="line"><span class="comment">// &#123;params&#125;：要执行动画的CSS属性，带数字（必选）</span></span><br><span class="line"><span class="comment">// speed：执行动画时长（可选），默认400</span></span><br><span class="line"><span class="comment">// easing:执行效果，默认为swing（缓动）慢快慢  可以是linear（匀速）</span></span><br><span class="line"><span class="comment">// callback：动画执行完后立即执行的回调函数（可选）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// stop方法：停止动画效果</span></span><br><span class="line">stop(clearQueue, jumpToEnd);</span><br><span class="line"><span class="comment">// 第一个参数：是否清除队列</span></span><br><span class="line"><span class="comment">// 第二个参数：是否跳转到最终效果</span></span><br></pre></td></tr></table></figure><h3 id="jQuery节点操作"><a href="#jQuery节点操作" class="headerlink" title="jQuery节点操作"></a>jQuery节点操作</h3><h4 id="创建节点"><a href="#创建节点" class="headerlink" title="创建节点"></a>创建节点</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'&lt;span&gt;这是一个span元素&lt;/span&gt;'</span>);</span><br></pre></td></tr></table></figure><h4 id="添加节点"><a href="#添加节点" class="headerlink" title="添加节点"></a>添加节点</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">父节点.append(子节点);</span><br><span class="line">子节点.appendTo(父节点); <span class="comment">// 在被选元素的结尾插入内容</span></span><br><span class="line">父节点.prepend(子节点);  </span><br><span class="line">子节点.prependTo(父节点); <span class="comment">// 在被选元素的开头插入内容</span></span><br><span class="line">节点.before();  <span class="comment">// 在被选元素之后插入内容</span></span><br><span class="line">节点.after();  <span class="comment">// 在被选元素之前插入内容</span></span><br></pre></td></tr></table></figure><h4 id="清空节点与删除节点"><a href="#清空节点与删除节点" class="headerlink" title="清空节点与删除节点"></a>清空节点与删除节点</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'div'</span>).empty(); <span class="comment">// 清空div的所有内容（推荐使用，会清除子元素上绑定的内容，源码）但自身保留</span></span><br><span class="line">$(<span class="string">'div'</span>).html(<span class="string">''</span>);<span class="comment">// 使用html方法来清空元素 赋值操作</span></span><br><span class="line">$(<span class="string">'div'</span>).remove(); <span class="comment">// 相比于empty，自身也删除</span></span><br></pre></td></tr></table></figure><h4 id="克隆节点"><a href="#克隆节点" class="headerlink" title="克隆节点"></a>克隆节点</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 复制$(selector)所匹配到的元素（深度复制）</span></span><br><span class="line"><span class="comment">// cloneNode(true)</span></span><br><span class="line"><span class="comment">// 返回值为复制的新元素，和原来的元素没有任何关系了。即修改新元素，不会影响到原来的元素。</span></span><br><span class="line">$(selector).clone();</span><br></pre></td></tr></table></figure><h3 id="jQuery尺寸和位置操作"><a href="#jQuery尺寸和位置操作" class="headerlink" title="jQuery尺寸和位置操作"></a>jQuery尺寸和位置操作</h3><h4 id="width方法与height方法"><a href="#width方法与height方法" class="headerlink" title="width方法与height方法"></a>width方法与height方法</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 带参数表示设置高度</span></span><br><span class="line">$(<span class="string">'img'</span>).height(<span class="number">200</span>);</span><br><span class="line"><span class="comment">// 不带参数获取高度</span></span><br><span class="line">$(<span class="string">'img'</span>).height();</span><br><span class="line"><span class="comment">// 获取可视区宽度</span></span><br><span class="line">$(<span class="built_in">window</span>).width();</span><br><span class="line"><span class="comment">// 获取可视区高度</span></span><br><span class="line">$(<span class="built_in">window</span>).height();</span><br><span class="line">innerWidth()/innerHeight()<span class="comment">// 方法返回元素的宽度/高度（包括内边距）。</span></span><br><span class="line">outerWidth()/outerHeight()  <span class="comment">// 方法返回元素的宽度/高度（包括内边距和边框）。</span></span><br><span class="line">outerWidth(<span class="literal">true</span>)/outerHeight(<span class="literal">true</span>)  <span class="comment">// 方法返回元素的宽度/高度（包括内边距、边框和外边距）。</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取页面被卷曲的高度</span></span><br><span class="line">$(<span class="built_in">window</span>).scrollTop();</span><br><span class="line"><span class="comment">// 获取页面被卷曲的宽度</span></span><br><span class="line">$(<span class="built_in">window</span>).scrollLeft();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 设置滚动动画(必须是body, html)</span></span><br><span class="line">$(<span class="string">'body,html'</span>).animate(&#123;</span><br><span class="line">    scrollTop: <span class="number">0</span></span><br><span class="line">&#125;, <span class="number">100</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取或设置元素距离document的位置,返回值为对象：&#123;left:100, top:100&#125;</span></span><br><span class="line">$(selector).offset();</span><br><span class="line"><span class="comment">// 获取相对于其最近的有定位的父元素的位置。</span></span><br><span class="line">$(selector).position();</span><br></pre></td></tr></table></figure><h3 id="jQuery事件机制"><a href="#jQuery事件机制" class="headerlink" title="jQuery事件机制"></a>jQuery事件机制</h3><h4 id="事件绑定"><a href="#事件绑定" class="headerlink" title="事件绑定"></a>事件绑定</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 注册多个事件</span></span><br><span class="line">$(selector).bind(<span class="string">'click mousemove'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 注册委托事件</span></span><br><span class="line">$(selector).delegate(<span class="string">'p'</span>, <span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 综合(重要)</span></span><br><span class="line">$(selector).on(<span class="string">'mouseover click'</span>, <span class="string">'p'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 第一个参数：events，绑定事件的名称可以是由空格分隔的多个事件（标准事件或者自定义事件）</span></span><br><span class="line"><span class="comment">// 第二个参数：selector, 执行事件的后代元素（可选），如果没有后代元素，那么事件将有自己执行。</span></span><br><span class="line"><span class="comment">// 第三个参数：data，传递给处理函数的数据，事件触发的时候通过event.data来使用（不常使用）</span></span><br><span class="line"><span class="comment">// 第四个参数：handler，事件处理函数</span></span><br><span class="line">$(selector).on(events[,selector][,data],handler);</span><br></pre></td></tr></table></figure><h4 id="事件解绑"><a href="#事件解绑" class="headerlink" title="事件解绑"></a>事件解绑</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$(selector).unbind(); <span class="comment">// 解绑所有的事件</span></span><br><span class="line">$(selector).unbind(<span class="string">'click'</span>); <span class="comment">// 解绑指定的事件</span></span><br><span class="line">$( selector ).undelegate(); <span class="comment">// 解绑所有的delegate事件</span></span><br><span class="line">$( selector).undelegate( <span class="string">'click'</span> ); <span class="comment">// 解绑所有的click事件</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 重要</span></span><br><span class="line"><span class="comment">// 解绑匹配元素的所有事件</span></span><br><span class="line">$(selector).off();</span><br><span class="line"><span class="comment">// 解绑匹配元素的所有click事件</span></span><br><span class="line">$(selector).off(<span class="string">'click'</span>);</span><br></pre></td></tr></table></figure><h4 id="触发事件"><a href="#触发事件" class="headerlink" title="触发事件"></a>触发事件</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$(selector).click(); <span class="comment">// 触发 click事件 用代码触发 不是手动</span></span><br><span class="line">$(selector).trigger(<span class="string">'click'</span>);</span><br><span class="line"></span><br><span class="line">$(selector).hover(fnEnter, fnLeave);</span><br><span class="line"><span class="comment">// 下面的简写形式</span></span><br><span class="line">$(selector).mouseenter(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;).mouseleave(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h4 id="jQuery事件对象"><a href="#jQuery事件对象" class="headerlink" title="jQuery事件对象"></a>jQuery事件对象</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">screenX和screenY<span class="comment">// 对应屏幕最左上角的值</span></span><br><span class="line">offsetX和offsetY  <span class="comment">// 获取鼠标在元素中的位置</span></span><br><span class="line">clientX和clientY<span class="comment">// 距离页面左上角的位置（忽视滚动条） pageX和pageY距离页面最顶部的左上角的位置（会计算滚动条的距离）</span></span><br><span class="line"></span><br><span class="line">event.keyCode<span class="comment">// 按下的键盘代码</span></span><br><span class="line">event.data<span class="comment">// 存储绑定事件时传递的附加数据</span></span><br><span class="line"></span><br><span class="line">event.stopPropagation()<span class="comment">// 阻止事件冒泡行为</span></span><br><span class="line">event.preventDefault()<span class="comment">// 阻止浏览器默认行为</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>; <span class="comment">// 既能阻止事件冒泡，又能阻止浏览器默认行为。</span></span><br></pre></td></tr></table></figure><h3 id="each方法"><a href="#each方法" class="headerlink" title="each方法"></a>each方法</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 参数一表示当前元素在所有匹配元素中的索引号</span></span><br><span class="line"><span class="comment">// 参数二表示当前元素（DOM对象）</span></span><br><span class="line">$(selector).each(<span class="function"><span class="keyword">function</span>(<span class="params">index,element</span>)</span>&#123;&#125;);</span><br></pre></td></tr></table></figure><h3 id="多库共存"><a href="#多库共存" class="headerlink" title="多库共存"></a>多库共存</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> c = $.noConflict();<span class="comment">// 释放$的控制权,并且把$的能力给了c</span></span><br></pre></td></tr></table></figure><h3 id="循环遍历"><a href="#循环遍历" class="headerlink" title="循环遍历"></a>循环遍历</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(selector).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, v</span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line">$.each(arr, <span class="function"><span class="keyword">function</span>(<span class="params">i, v</span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
        <tags>
            
            <tag> jQuery </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/04/30/hello-world/"/>
      <url>/2018/04/30/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
    </entry>
    
  
  
</search>
